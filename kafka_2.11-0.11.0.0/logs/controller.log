[2018-04-29 01:01:23,551] TRACE [Controller 1]: Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-04-29 01:01:23,555] DEBUG [Controller 1]: Preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,3] -> List(2, 3), [connect-offsets,17] -> List(2), [__KafkaCruiseControlModelTrainingSamples,2] -> List(2, 1), [__KafkaCruiseControlPartitionMetricSamples,15] -> List(2, 3), [__KafkaCruiseControlPartitionMetricSamples,0] -> List(2, 1), [__consumer_offsets,10] -> List(2), [connect-offsets,2] -> List(2), [twitter-data,0] -> List(2), [__consumer_offsets,40] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,12] -> List(2, 1), [connect-status,0] -> List(2), [test,2] -> List(2, 3, 1), [__consumer_offsets,22] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,18] -> List(2, 1), [connect-offsets,5] -> List(2), [__KafkaCruiseControlModelTrainingSamples,17] -> List(2, 3), [__KafkaCruiseControlModelTrainingSamples,5] -> List(2, 3), [connect-status,3] -> List(2), [connect-offsets,11] -> List(2), [__consumer_offsets,13] -> List(2), [__KafkaCruiseControlModelTrainingSamples,11] -> List(2, 3), [__KafkaCruiseControlPartitionMetricSamples,30] -> List(2, 1), [__KafkaCruiseControlModelTrainingSamples,14] -> List(2, 1), [__consumer_offsets,49] -> List(2), [__consumer_offsets,28] -> List(2), [__consumer_offsets,4] -> List(2), [__consumer_offsets,37] -> List(2), [__consumer_offsets,31] -> List(2), [__KafkaCruiseControlModelTrainingSamples,26] -> List(2, 1), [connect-offsets,14] -> List(2), [connect-offsets,23] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,21] -> List(2, 3), [__CruiseControlMetrics,0] -> List(2), [__consumer_offsets,34] -> List(2), [connect-offsets,8] -> List(2), [__consumer_offsets,46] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,24] -> List(2, 1), [__consumer_offsets,25] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,27] -> List(2, 3), [__consumer_offsets,43] -> List(2), [__KafkaCruiseControlModelTrainingSamples,20] -> List(2, 1), [connect-configs,0] -> List(2), [connect-offsets,20] -> List(2), [__consumer_offsets,7] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,6] -> List(2, 1), [__KafkaCruiseControlModelTrainingSamples,8] -> List(2, 1), [__KafkaCruiseControlPartitionMetricSamples,9] -> List(2, 3), [__consumer_offsets,1] -> List(2), [__KafkaCruiseControlModelTrainingSamples,29] -> List(2, 3), [__consumer_offsets,16] -> List(2), [__KafkaCruiseControlModelTrainingSamples,23] -> List(2, 3)), 1 -> Map([__consumer_offsets,30] -> List(1), [__KafkaCruiseControlModelTrainingSamples,28] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,2] -> List(1, 3), [__consumer_offsets,39] -> List(1), [test,1] -> List(1, 2, 3), [__KafkaCruiseControlModelTrainingSamples,7] -> List(1, 3), [__KafkaCruiseControlModelTrainingSamples,1] -> List(1, 3), [__consumer_offsets,18] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,17] -> List(1, 2), [connect-offsets,12] -> List(1), [connect-offsets,15] -> List(1), [__consumer_offsets,0] -> List(1), [__consumer_offsets,24] -> List(1), [__KafkaCruiseControlModelTrainingSamples,13] -> List(1, 3), [__consumer_offsets,33] -> List(1), [connect-offsets,9] -> List(1), [__consumer_offsets,3] -> List(1), [__consumer_offsets,21] -> List(1), [connect-status,4] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,11] -> List(1, 2), [__KafkaCruiseControlModelTrainingSamples,22] -> List(1, 2), [connect-status,1] -> List(1), [connect-offsets,0] -> List(1), [__consumer_offsets,12] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,8] -> List(1, 3), [__KafkaCruiseControlModelTrainingSamples,16] -> List(1, 2), [__consumer_offsets,15] -> List(1), [__consumer_offsets,48] -> List(1), [__KafkaCruiseControlModelTrainingSamples,19] -> List(1, 3), [connect-offsets,6] -> List(1), [__KafkaCruiseControlModelTrainingSamples,25] -> List(1, 3), [__KafkaCruiseControlPartitionMetricSamples,14] -> List(1, 3), [connect-offsets,24] -> List(1), [__consumer_offsets,6] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,29] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,20] -> List(1, 3), [__consumer_offsets,42] -> List(1), [connect-offsets,18] -> List(1), [connect-offsets,3] -> List(1), [connect-offsets,21] -> List(1), [__KafkaCruiseControlModelTrainingSamples,31] -> List(1, 3), [__consumer_offsets,45] -> List(1), [__consumer_offsets,27] -> List(1), [__consumer_offsets,36] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,5] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,23] -> List(1, 2), [__consumer_offsets,9] -> List(1), [__KafkaCruiseControlModelTrainingSamples,10] -> List(1, 2), [__KafkaCruiseControlModelTrainingSamples,4] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,26] -> List(1, 3)), 3 -> Map([__KafkaCruiseControlPartitionMetricSamples,19] -> List(3, 2), [__consumer_offsets,47] -> List(3), [__consumer_offsets,41] -> List(3), [__consumer_offsets,29] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,31] -> List(3, 2), [__consumer_offsets,17] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,4] -> List(3, 1), [__consumer_offsets,14] -> List(3), [__KafkaCruiseControlModelTrainingSamples,30] -> List(3, 2), [__consumer_offsets,26] -> List(3), [__KafkaCruiseControlModelTrainingSamples,3] -> List(3, 1), [__KafkaCruiseControlPartitionMetricSamples,1] -> List(3, 2), [connect-status,2] -> List(3), [connect-offsets,4] -> List(3), [__consumer_offsets,20] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,10] -> List(3, 1), [__consumer_offsets,5] -> List(3), [connect-offsets,22] -> List(3), [__KafkaCruiseControlModelTrainingSamples,6] -> List(3, 2), [__KafkaCruiseControlPartitionMetricSamples,16] -> List(3, 1), [connect-offsets,7] -> List(3), [connect-offsets,10] -> List(3), [__consumer_offsets,8] -> List(3), [__KafkaCruiseControlModelTrainingSamples,24] -> List(3, 2), [__consumer_offsets,23] -> List(3), [__consumer_offsets,11] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,13] -> List(3, 2), [__KafkaCruiseControlModelTrainingSamples,15] -> List(3, 1), [__KafkaCruiseControlModelTrainingSamples,12] -> List(3, 2), [__KafkaCruiseControlPartitionMetricSamples,25] -> List(3, 2), [__KafkaCruiseControlPartitionMetricSamples,7] -> List(3, 2), [__consumer_offsets,44] -> List(3), [connect-offsets,1] -> List(3), [__KafkaCruiseControlModelTrainingSamples,27] -> List(3, 1), [connect-offsets,16] -> List(3), [__KafkaCruiseControlModelTrainingSamples,9] -> List(3, 1), [__KafkaCruiseControlModelTrainingSamples,0] -> List(3, 2), [__consumer_offsets,32] -> List(3), [connect-offsets,19] -> List(3), [__consumer_offsets,35] -> List(3), [connect-offsets,13] -> List(3), [test,0] -> List(3, 1, 2), [__consumer_offsets,38] -> List(3), [__KafkaCruiseControlModelTrainingSamples,18] -> List(3, 2), [__KafkaCruiseControlModelTrainingSamples,21] -> List(3, 1), [__consumer_offsets,2] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,22] -> List(3, 1), [__KafkaCruiseControlPartitionMetricSamples,28] -> List(3, 1))) (kafka.controller.KafkaController)
[2018-04-29 01:01:23,556] DEBUG [Controller 1]: Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-04-29 01:01:23,556] TRACE [Controller 1]: Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2018-04-29 01:01:23,556] DEBUG [Controller 1]: Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-04-29 01:01:23,556] TRACE [Controller 1]: Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2018-04-29 01:01:23,556] DEBUG [Controller 1]: Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-04-29 01:01:23,556] TRACE [Controller 1]: Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2018-04-29 01:06:23,556] TRACE [Controller 1]: Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-04-29 01:06:23,558] DEBUG [Controller 1]: Preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,3] -> List(2, 3), [connect-offsets,17] -> List(2), [__KafkaCruiseControlModelTrainingSamples,2] -> List(2, 1), [__KafkaCruiseControlPartitionMetricSamples,15] -> List(2, 3), [__KafkaCruiseControlPartitionMetricSamples,0] -> List(2, 1), [__consumer_offsets,10] -> List(2), [connect-offsets,2] -> List(2), [twitter-data,0] -> List(2), [__consumer_offsets,40] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,12] -> List(2, 1), [connect-status,0] -> List(2), [test,2] -> List(2, 3, 1), [__consumer_offsets,22] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,18] -> List(2, 1), [connect-offsets,5] -> List(2), [__KafkaCruiseControlModelTrainingSamples,17] -> List(2, 3), [__KafkaCruiseControlModelTrainingSamples,5] -> List(2, 3), [connect-status,3] -> List(2), [connect-offsets,11] -> List(2), [__consumer_offsets,13] -> List(2), [__KafkaCruiseControlModelTrainingSamples,11] -> List(2, 3), [__KafkaCruiseControlPartitionMetricSamples,30] -> List(2, 1), [__KafkaCruiseControlModelTrainingSamples,14] -> List(2, 1), [__consumer_offsets,49] -> List(2), [__consumer_offsets,28] -> List(2), [__consumer_offsets,4] -> List(2), [__consumer_offsets,37] -> List(2), [__consumer_offsets,31] -> List(2), [__KafkaCruiseControlModelTrainingSamples,26] -> List(2, 1), [connect-offsets,14] -> List(2), [connect-offsets,23] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,21] -> List(2, 3), [__CruiseControlMetrics,0] -> List(2), [__consumer_offsets,34] -> List(2), [connect-offsets,8] -> List(2), [__consumer_offsets,46] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,24] -> List(2, 1), [__consumer_offsets,25] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,27] -> List(2, 3), [__consumer_offsets,43] -> List(2), [__KafkaCruiseControlModelTrainingSamples,20] -> List(2, 1), [connect-configs,0] -> List(2), [connect-offsets,20] -> List(2), [__consumer_offsets,7] -> List(2), [__KafkaCruiseControlPartitionMetricSamples,6] -> List(2, 1), [__KafkaCruiseControlModelTrainingSamples,8] -> List(2, 1), [__KafkaCruiseControlPartitionMetricSamples,9] -> List(2, 3), [__consumer_offsets,1] -> List(2), [__KafkaCruiseControlModelTrainingSamples,29] -> List(2, 3), [__consumer_offsets,16] -> List(2), [__KafkaCruiseControlModelTrainingSamples,23] -> List(2, 3)), 1 -> Map([__consumer_offsets,30] -> List(1), [__KafkaCruiseControlModelTrainingSamples,28] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,2] -> List(1, 3), [__consumer_offsets,39] -> List(1), [test,1] -> List(1, 2, 3), [__KafkaCruiseControlModelTrainingSamples,7] -> List(1, 3), [__KafkaCruiseControlModelTrainingSamples,1] -> List(1, 3), [__consumer_offsets,18] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,17] -> List(1, 2), [connect-offsets,12] -> List(1), [connect-offsets,15] -> List(1), [__consumer_offsets,0] -> List(1), [__consumer_offsets,24] -> List(1), [__KafkaCruiseControlModelTrainingSamples,13] -> List(1, 3), [__consumer_offsets,33] -> List(1), [connect-offsets,9] -> List(1), [__consumer_offsets,3] -> List(1), [__consumer_offsets,21] -> List(1), [connect-status,4] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,11] -> List(1, 2), [__KafkaCruiseControlModelTrainingSamples,22] -> List(1, 2), [connect-status,1] -> List(1), [connect-offsets,0] -> List(1), [__consumer_offsets,12] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,8] -> List(1, 3), [__KafkaCruiseControlModelTrainingSamples,16] -> List(1, 2), [__consumer_offsets,15] -> List(1), [__consumer_offsets,48] -> List(1), [__KafkaCruiseControlModelTrainingSamples,19] -> List(1, 3), [connect-offsets,6] -> List(1), [__KafkaCruiseControlModelTrainingSamples,25] -> List(1, 3), [__KafkaCruiseControlPartitionMetricSamples,14] -> List(1, 3), [connect-offsets,24] -> List(1), [__consumer_offsets,6] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,29] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,20] -> List(1, 3), [__consumer_offsets,42] -> List(1), [connect-offsets,18] -> List(1), [connect-offsets,3] -> List(1), [connect-offsets,21] -> List(1), [__KafkaCruiseControlModelTrainingSamples,31] -> List(1, 3), [__consumer_offsets,45] -> List(1), [__consumer_offsets,27] -> List(1), [__consumer_offsets,36] -> List(1), [__KafkaCruiseControlPartitionMetricSamples,5] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,23] -> List(1, 2), [__consumer_offsets,9] -> List(1), [__KafkaCruiseControlModelTrainingSamples,10] -> List(1, 2), [__KafkaCruiseControlModelTrainingSamples,4] -> List(1, 2), [__KafkaCruiseControlPartitionMetricSamples,26] -> List(1, 3)), 3 -> Map([__KafkaCruiseControlPartitionMetricSamples,19] -> List(3, 2), [__consumer_offsets,47] -> List(3), [__consumer_offsets,41] -> List(3), [__consumer_offsets,29] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,31] -> List(3, 2), [__consumer_offsets,17] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,4] -> List(3, 1), [__consumer_offsets,14] -> List(3), [__KafkaCruiseControlModelTrainingSamples,30] -> List(3, 2), [__consumer_offsets,26] -> List(3), [__KafkaCruiseControlModelTrainingSamples,3] -> List(3, 1), [__KafkaCruiseControlPartitionMetricSamples,1] -> List(3, 2), [connect-status,2] -> List(3), [connect-offsets,4] -> List(3), [__consumer_offsets,20] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,10] -> List(3, 1), [__consumer_offsets,5] -> List(3), [connect-offsets,22] -> List(3), [__KafkaCruiseControlModelTrainingSamples,6] -> List(3, 2), [__KafkaCruiseControlPartitionMetricSamples,16] -> List(3, 1), [connect-offsets,7] -> List(3), [connect-offsets,10] -> List(3), [__consumer_offsets,8] -> List(3), [__KafkaCruiseControlModelTrainingSamples,24] -> List(3, 2), [__consumer_offsets,23] -> List(3), [__consumer_offsets,11] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,13] -> List(3, 2), [__KafkaCruiseControlModelTrainingSamples,15] -> List(3, 1), [__KafkaCruiseControlModelTrainingSamples,12] -> List(3, 2), [__KafkaCruiseControlPartitionMetricSamples,25] -> List(3, 2), [__KafkaCruiseControlPartitionMetricSamples,7] -> List(3, 2), [__consumer_offsets,44] -> List(3), [connect-offsets,1] -> List(3), [__KafkaCruiseControlModelTrainingSamples,27] -> List(3, 1), [connect-offsets,16] -> List(3), [__KafkaCruiseControlModelTrainingSamples,9] -> List(3, 1), [__KafkaCruiseControlModelTrainingSamples,0] -> List(3, 2), [__consumer_offsets,32] -> List(3), [connect-offsets,19] -> List(3), [__consumer_offsets,35] -> List(3), [connect-offsets,13] -> List(3), [test,0] -> List(3, 1, 2), [__consumer_offsets,38] -> List(3), [__KafkaCruiseControlModelTrainingSamples,18] -> List(3, 2), [__KafkaCruiseControlModelTrainingSamples,21] -> List(3, 1), [__consumer_offsets,2] -> List(3), [__KafkaCruiseControlPartitionMetricSamples,22] -> List(3, 1), [__KafkaCruiseControlPartitionMetricSamples,28] -> List(3, 1))) (kafka.controller.KafkaController)
[2018-04-29 01:06:23,559] DEBUG [Controller 1]: Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-04-29 01:06:23,559] TRACE [Controller 1]: Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2018-04-29 01:06:23,559] DEBUG [Controller 1]: Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-04-29 01:06:23,559] TRACE [Controller 1]: Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2018-04-29 01:06:23,559] DEBUG [Controller 1]: Topics not in preferred replica Map() (kafka.controller.KafkaController)
[2018-04-29 01:06:23,559] TRACE [Controller 1]: Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
